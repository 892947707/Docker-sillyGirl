replies:
  - type: text
    rules:
      - ^牛哇$
    content: 牛哇牛哇

  - type: text
    rules:
      - ^好家伙$
    content: 不愧是你

  - type: url
    rules:
      - ^功能列表$
    request:
      response_type: text
      url: 'https://blog.dswang.ga:8443/menu.php'

  - type: url
    rules:
      - ^常用指令$
    request:
      response_type: text
      url: 'https://blog.dswang.ga:8443/zhiling.php'

#图片类
  - type: url
    rules:
      - ^好康的$
      - ^二次元$
    request:
      response_type: image
      url: 'https://acg.toubiec.cn/random.php'

  - type: url
    rules:
      - ^美女$
    request:
      response_type: image
      url: 'http://api.btstu.cn/sjbz/zsy.php'

  - type: url
    rules:
      - ^妹子$
    request:
      response_type: image
      url: 'http://api.btstu.cn/sjbz/?m_lx=suiji'

  - type: url
    rules:
      - ^壁纸$
    request:
      response_type: image
      url: 'https://api.xcboke.cn/api/sjbz?method=mobile&lx=suiji'

  - type: url
    rules:
      - ^涩图$
    request:
      response_type: image
      url: https://pximg2.rainchan.win/rawimg

  - type: url
    rules:
      - ^买家秀$
    request:
      response_type: image
      url: 'https://api.uomg.com/api/rand.img3'

  - type: url
    rules:
      - ^美腿$
    request:
      response_type: image
      url: 'https://api.iyk0.com/mtt'

#文字类
  - type: url
    rules:
      - ^一言$
    request:
      response_type: text
      url: 'https://api.xcboke.cn/api/yulu?c=1002&encode=text'

  - type: url
    rules:
      - ^骚话$
    request:
      response_type: text
      url: 'https://api.vvhan.com/api/sao'

  - type: url
    rules:
      - ^舔狗$
    request:
      response_type: text
      url: 'https://api.iyk0.com/tiangou'

  - type: url
    rules:
      - ^热搜$
    request:
      response_type: template
      url: 'https://tenapi.cn/resou/'
      template: "fjson(list.[i].name,[i].[?],\n)"  #只取标题

#  - type: url
#    rules:
#      - 微博热搜
#    request:
#      response_type: template
#      url: 'https://tenapi.cn/resou/'
#      template: "fjson(list.[i].name,[i].[?]。,\n)"  #只取标题
#      template: "fjson(tfmt(list).[i],[i].标题：[?.name] 热度：[?.hot] 链接：[?.url],\n)"
      #数字取不出来

  - type: url
    rules:
      - ^毒鸡汤$
    request:
      response_type: json
      url: 'https://www.hlapi.cn/api/djt?charset=utf-8&encode=json'
      get: text

  - type: url
    rules:
      - ^古诗一言$
    request:
      response_type: text
      url: 'https://api.iyk0.com/gsyy/'

  - type: url
    rules:
      - ^笑话$
    request:
      response_type: text
      url: 'https://www.hlapi.cn/api/gxdz'

  - type: url
    rules:
      - ^历史上的今天$
    request:
      response_type: text
      url: 'http://jiuli.xiaoapi.cn/i/lssdjt.php'

  - type: url
    rules:
      - ^情话$
    request:
      response_type: json
      url: 'https://api.ooomn.com/api/love'
      get: text

  - type: url
    rules:
      - ^土味情话$
    request:
      response_type: text
      url: 'https://api.xcboke.cn/api/yulu?c=1001&encode=text'

  - type: url
    rules:
      - ^精神语录$
    request:
      response_type: text
      url: 'https://api.xcboke.cn/api/yulu?c=1002&encode=text'
  
  - type: url
    rules:
      - ^网抑云$
    request:
      response_type: text
      url: 'https://api.xcboke.cn/api/yulu?c=1003&encode=text'

  - type: url
    rules:
      - ^朋友圈文案$
    request:
      response_type: text
      url: 'https://api.xcboke.cn/api/yulu?c=1008&encode=text'

  - type: url
    rules:
      - ^来对线$
    request:
      response_type: text
      url: 'https://api.xcboke.cn/api/yulu?c=1009&encode=text'

  - type: url
    rules:
      - ^动漫台词$
    request:
      response_type: text
      url: 'https://api.xcboke.cn/api/yulu?c=2001&encode=text'

  - type: url
    rules:
      - ^游戏台词$
    request:
      response_type: text
      url: 'https://api.xcboke.cn/api/yulu?c=2003&encode=text'

  - type: url
    rules:
      - ^撩人语录$
    request:
      response_type: text
      url: 'https://api.xcboke.cn/api/yulu?c=2005&encode=text'

  - type: url
    rules:
      - ^彩虹屁$
    request:
      response_type: json
      url: 'https://api.iyk0.com/chp'
      get: txt

  - type: url
    rules:
      - ^取名$
    request:
      response_type: json
      url: 'https://api.iyk0.com/sjxm/'
      get: name

  - type: url
    rules:
      - ^逼乎日报$
    request:
        url: 'https://api.xcboke.cn/api/zhihu'
        response_type: template
#        template: "标题：gjson(news.[0].title)\n链接：gjson(news.[0].url)\n"  #只能取一个值
#        template: "fjson(news.[i].title,标题：[i].[?],\n)"  #每个值前面加标题两个字
        template: "fjson(tfmt(news).[i],[i].标题：[?.title]\n链接：[?.url],\n)"
#      格式化将要取的数组,循环取标题（变量）空格链接（变量）,回车

#功能类
  - type: url
    rules:
      - ^股票 (.*)$
    request:
      response_type: text
      url: 'https://zyzcfa.com:444/api/stocks?keyword={{1}}'

  - type: url
    rules:
      - ^翻译 (.*)$
      - ^翻译翻译，什么叫(.*)$
    request:
      response_type: json
      url: 'https://api.66mz8.com/api/translation.php?info={{1}}'
      get: fanyi

  - type: url
    rules:
      - ^二维码 (.*)$
    request:
      response_type: image
      url: >-
        http://apis.juhe.cn/qrcode/api?text={{1}}&type=2&key=3f293bcc2523914390940751a93a6fe2
#      url: 'https://api.sumt.cn/api/short.php?dwz=mrwso&url={{1}}'   ##|suoim|suonz|mrwso
#      get: url_short                                             ##|mtw.so此域名被举报|suo.nz|mrw.so

  - type: url
    rules:
      - ^短网址 (.*)$
      - ^短链接 (.*)$
    request:
      response_type: text
      url: 'https://api.iyk0.com/dwz/?id=5&url={{1}}'

  - type: url
    rules:
      - ^自定短址 (.*) (.*)$
    request:
      response_type: json
      url: 'https://api.sumt.cn/api/dwz.url.php?url={{1}}&&code={{2}}'
      get: url_short

  - type: url
    rules:
      - ^短址还原 (.*)$
    request:
      response_type: json
      url: 'https://api.sumt.cn/api/restore.php?url={{1}}'
      get: url_long

  - type: url
    rules:
      - ^QQ状态 (.*)$
    request:
      response_type: json
      url: 'https://api.sumt.cn/api/qq.state.php?qq={{1}}'
      get: data

  - type: url
    rules:
      - ^百科 (.*)$
    request:
      response_type: json
      url: 'https://api.iyk0.com/sgbk/?msg={{1}}'
      get: data

  - type: url
    rules:
      - ^查天气 (.*)$
      - ^看天气 (.*)$
    request:
      response_type: text
      url: 'https://api.iyk0.com/3rtq/?msg={{1}}'

  - type: url
    rules:
      - ^天气 (.*) (.*)$
      - ^天气预报 (.*) (.*)$
    request:
      response_type: text
      url: 'https://api.iyk0.com/3rtq/?msg={{1}}&b={{2}}'

  - type: url
    rules:
      - ^搜淘宝 (.*)$
    request:
      response_type: text
      url: 'https://api.iyk0.com/tbsp/?msg={{1}}'

  - type: url
    rules:
      - ^淘宝 (.*) (.*)$
    request:
      response_type: text
      url: 'https://api.iyk0.com/tbsp/?msg={{1}}&n={{2}}'

  - type: url
    rules:
      - ^ping (.*)$
      - ^Ping (.*)$
      - ^PING (.*)$
    request:
        response_type: template
        url: 'https://kbapi.cc/API/ping/?url={{1}}'
        template: "ip：gjson(ip)\n address：gjson(address)\n最低延迟：gjson(delay.mini)\n最高延迟：gjson(delay.max)\n平均延迟：gjson(delay.average)\n丢包率：gjson(data.lose)"

  - type: url
    rules:
      - ^什么梗 (.*)$
      - ^(.*)是什么梗$
    request:
      response_type: template
      url: 'https://api.iyk0.com/gzs/?msg={{1}}'
#      template: "fjson(data.[i].title,[i].[?]。,\n)"  #取所有值，太多了
      template: "gjson(data.[0].title)\n"

  - type: url
    rules:
      - ^查字\s*(\S*)$
    replace:        #替换
      -             #全部内容
        - <br>      #将要替换的
        - "\n"      #替换成的
    request:
        response_type: template
        url: https://api.tianapi.com/txapi/xhzd/index?key=c368fbab7b75b060106c536a1745937a&word={{1}}
#        template: "汉字：gjson(newslist.[0].hanzi)\n读音：gjson(newslist.[0].pyyb)\n解释：gjson(newslist.[0].content)\n拓展：gjson(newslist.[0].explain)"
        template: "汉字：gjson(newslist.[0].hanzi)\n读音：gjson(newslist.[0].pyyb)\n解释：gjson(newslist.[0].content))"
    #将要输出的随意文字或字符：不同的变量取值(被取的数组.[]只取一个值.被取的内容)回车再取一次

  - type: url
    rules:
      - ^今日热点$
    request:
        url: https://api.tianapi.com/txapi/wxhottopic/index?key=c368fbab7b75b060106c536a1745937a
        response_type: template
        template: "fjson(newslist.[i].word,[i].[?]。,\n)"
    #相同定量循环取值（被取的数组.[]内循环取数量.被取的变量,获取数组,回车）


#- type: url
#    rules:
#      - ^历史上的今天$
#    request:
#        url: https://api.iyk0.com/lishi/
#        response_type: template
#        template: "fjson(tfmt(01月02日).[i],[i]. [?.year]，[?.title]。,\n)"
#            第一段是格式化时间取年 第二段是索引+json动态解析,第三个换行符

  - type: url
    rules:
      - ^网址检测 (.*)$
    request:
      response_type: json
      url: 'http://yubanapi.top/API/url.php?url={{1}}'
      get: type

  - type: url
    rules:
      - ^爬 (.*)$
      - ^(.*) 爬$
      - ^去你的吧 (.*)$
      - ^丢(.*)$
    request:
      response_type: image
      url: 'https://kbapi.cc/API/diu/api.php?qq={{1}}'

  - type: url
    rules:
      - ^嗯 (.*)$
    request:
      response_type: image
      url: 'https://kbapi.cc/API/jupai/?text={{1}}'
